/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ResponseSchemasData extends SpeakeasyBase {}

export class Total extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "relation" })
    relation?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: number;
}

export class ResponseCursor extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: ResponseSchemasData })
    @Expose({ name: "data" })
    @Type(() => ResponseSchemasData)
    data?: ResponseSchemasData[];

    @SpeakeasyMetadata()
    @Expose({ name: "hasMore" })
    hasMore?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "next" })
    next?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pageSize" })
    pageSize?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "previous" })
    previous?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "total" })
    @Type(() => Total)
    total?: Total;
}

/**
 * The payload
 */
export class ResponseData extends SpeakeasyBase {}

export class Response extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "cursor" })
    @Type(() => ResponseCursor)
    cursor?: ResponseCursor;

    /**
     * The payload
     */
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => ResponseData)
    data?: ResponseData;
}
